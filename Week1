#Provide an expression that sets A to be a 2 \times 32Ã—3 numpy array (22 rows by 33 columns), containing any values you wish.
import numpy as np
A = 0
A=np.array([[1,2,3],[2,3,4]])

#Write a procedure that takes an array and returns the transpose of the array. You can use 'np.transpose' or the '.T', but you may not use a loop.
import numpy as np
def tp(A):
    return A.T
    pass
    
# Write a procedure that takes a list of numbers and returns a 2D numpy array representing a row vector containing those numbers.
import numpy as np
def rv(value_list):
   return np.array([value_list])
   
#Write a procedure that takes a list of numbers and returns a 2D numpy array representing a column vector containing those numbers. You can use the rv procedure.
import numpy as np
def cv(value_list):
    return np.array([value_list]).T
    
#Write a procedure that takes a column vector and returns the vector's Euclidean length (or equivalently, its magnitude) as a scalar. You may not use np.linalg.norm, and you may not use a loop.
import numpy as np
def length(col_v):
    return np.linalg.norm([col_v])

#Write a procedure that takes a column vector and returns a unit vector in the same direction. You may not use a for loop. Use your length procedure from above (you do not need to define it again).
import numpy as np
def normalize(col_v):
   return col_v/length(col_v)


